name: CI

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  # Make sure CI fails on all warnings, including Clippy lints
  RUSTFLAGS: "-Dwarnings"

jobs:
  fmt:
    name: Code Formatting Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - name: "rustfmt --check"
        run: |
          if ! rustfmt --check --edition 2024 $(git ls-files '*.rs'); then
            printf "Please run \`rustfmt --edition 2024 \$(git ls-files '*.rs')\` to fix rustfmt errors.\nSee CONTRIBUTING.md for more details.\n" >&2
            exit 1
          fi

  clippy_check:
    name: Linter Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy
      - name: Install Protocol Buffers Compiler
        run: sudo apt-get install -y protobuf-compiler
      - name: Set PROTOC Environment Variable
        run: export PROTOC=/path/to/protoc
      - name: Run Clippy
        run: cargo clippy

  push-image:
    name: Docker Image Build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      - name: Build and push container image
        run: |
          docker build . -f docker/Dockerfile --tag ghcr.io/holo-routing/holo-cli:latest
          docker push ghcr.io/holo-routing/holo-cli:latest
